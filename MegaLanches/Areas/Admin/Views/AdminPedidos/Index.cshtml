@model ReflectionIT.Mvc.Paging.PagingList<MegaLanches.Models.Pedido>

@{
    ViewData["Title"] = "Index";
}
<h3>Pedidos</h3>

<form method="get" class="form-inline">
    <input name="filter" class="form-control" placeholder="Filtro" value="@Model.RouteValue["Filter"]" />
    <button type="submit" class="btn btn-info">
        <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Procurar
    </button>
</form>

<br>
Total de pedidos: @Model.TotalRecordCount
<div>
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model }) @* cria uma paginacao*@
</div>

<p>
    <a asp-action="Create">Criar Pedido</a>
</p>
<div class="row">
    <div class="col-md-10">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Nome)*@
                        @Html.SortableHeaderFor(model => model.Nome, "Nome")
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Sobrenome)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Endereco1)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Endereco2)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Cep)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Estado)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Cidade)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Telefone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PedidoEnviado)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PedidoEntregueEm)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nome)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Sobrenome)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Endereco1)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Endereco2)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cep)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Estado)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cidade)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Telefone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PedidoEnviado)
                            @*String.Format("{0:dd/MM/yyyy}"), item.PedidoEnviado) para exibir data sem a hora*@
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PedidoEntregueEm)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.PedidoId">Editar</a> |
                            <a asp-action="Details" asp-route-id="@item.PedidoId">Detalhes</a> |
                            <a asp-action="Delete" asp-route-id="@item.PedidoId">Deletar</a>
                            <a asp-action="PedidoLanches" asp-route-id="@item.PedidoId">Ver Lanches</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div>
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model }) @* cria uma paginacao*@
</div>